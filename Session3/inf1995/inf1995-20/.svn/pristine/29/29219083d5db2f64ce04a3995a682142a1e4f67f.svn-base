/****************************************************************************
 * Fichier: TP4_ex1.cpp
 * Auteur: Yannick OUellet et David Mainville
 * Date: 17 Septembre 2013
 * DESCRIPTION : Attenuation d une DEL
 ****************************************************************************/

/* Information sur branchements */
/* Port B0 branché sur +        */
/* Port B1 branché sur -        */

// F_CPU permet de définir la vitesse du micro-controleur soit 8MHz
#define F_CPU 8000000UL
#include <avr/io.h>
#include <util/delay.h>

#define BOUTON_ENFONCE (PIND & _BV(2))


int main()
{
    DDRB = 0xff; // PORT B est en mode sortie.
    DDRD = 0x0; // PORT D est en mode entrée.
    
    bool enfonce = false;
    double ratioInitial = 1;
    double ratioFinal = 0.1;
    double dureeTotal = 3; //En seconde
    double nbOperation = 100;
    double tempsInitial = dureeTotal*1000/nbOperation;
    double variationRatio = (ratioInitial-ratioFinal)/nbOperation;
    
    //A 8 megehertz on a 8 millions d operation par seconde

    // Boucle infinie
    for(;;)
    {
        // Verification du bouton poussoir avec anti-rebond
        if(BOUTON_ENFONCE)
        {
	    enfonce = true;
	    PORTB = _BV(PORTB0); //Rouge
        }
        else
	{
	  if(enfonce)
	  {
	    double ratio = ratioInitial;
	    double duree = 0;
	    while(duree < dureeTotal)
	    {
	      
	      int attenteAllumee = tempsInitial*ratio;
	      int attenteEteint = tempsInitial-attenteAllumee;
	      ratio -= variationRatio;
	      duree += tempsInitial/1000;
	      

	      PORTB = _BV(PORTB0); //Rouge
	      for(int i=0; i< attenteAllumee; i++)
	      {
		_delay_ms(1);
	      }
	      
	      PORTB = 0x0;
	      //PORTB = _BV(PORTB1);
	      for(int i=0; i< attenteEteint; i++)
	      {
		_delay_ms(1);
	      }

	      
	    }
	    
	  }
	  // LED éteinte par défaut.
	  PORTB = 0x0;
	  enfonce = false;
	}
    }

    return 0;
}