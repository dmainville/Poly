GAS LISTING /tmp/ccb1Z8O1.s 			page 1


   1               		.file	"libRobot.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/usagers/damaib/Documents/Session3/inf1995/inf1995-20/equipe/inf1995-1620/codeCommun/Tp/tp
   8               		.stabs	"libRobot.cpp",100,0,4,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"__uint24:t(0,1)=@s24;r(0,1);0;077777777;",128,0,0,0
  13               		.stabs	"__int24:t(0,2)=@s24;r(0,2);040000000;037777777;",128,0,0,0
  14               		.stabs	"__builtin_va_list:t(0,3)=*(0,4)=(0,4)",128,0,0,0
  15               		.stabs	"complex long double:t(0,5)=R3;8;0;",128,0,0,0
  16               		.stabs	"complex double:t(0,6)=R3;8;0;",128,0,0,0
  17               		.stabs	"complex float:t(0,7)=R3;8;0;",128,0,0,0
  18               		.stabs	"complex int:t(0,8)=s4real:(0,9)=r(0,9);-32768;32767;,0,16;imag:(0,9),16,16;;",128,0,0,0
  19               		.stabs	"long long unsigned int:t(0,10)=@s64;r(0,10);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"long unsigned int:t(0,11)=@s32;r(0,11);0;037777777777;",128,0,0,0
  21               		.stabs	"unsigned int:t(0,12)=r(0,12);0;0177777;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,13)=@s8;r(0,13);0;255;",128,0,0,0
  23               		.stabs	"long long int:t(0,14)=@s64;r(0,14);01000000000000000000000;0777777777777777777777;",128,0,
  24               		.stabs	"long int:t(0,15)=@s32;r(0,15);020000000000;017777777777;",128,0,0,0
  25               		.stabs	"int:t(0,9)",128,0,0,0
  26               		.stabs	"signed char:t(0,16)=@s8;r(0,16);-128;127;",128,0,0,0
  27               		.stabs	"char:t(0,17)=@s8;r(0,17);0;255;",128,0,0,0
  28               		.stabs	"signed:t(0,9)",128,0,0,0
  29               		.stabs	"unsigned long:t(0,11)",128,0,0,0
  30               		.stabs	"long long unsigned:t(0,10)",128,0,0,0
  31               		.stabs	"short int:t(0,18)=r(0,18);-32768;32767;",128,0,0,0
  32               		.stabs	"short unsigned int:t(0,19)=r(0,19);0;0177777;",128,0,0,0
  33               		.stabs	"unsigned short:t(0,19)",128,0,0,0
  34               		.stabs	"float:t(0,20)=r(0,9);4;0;",128,0,0,0
  35               		.stabs	"double:t(0,21)=r(0,9);4;0;",128,0,0,0
  36               		.stabs	"long double:t(0,22)=r(0,9);4;0;",128,0,0,0
  37               		.stabs	"void:t(0,4)",128,0,0,0
  38               		.stabs	"wchar_t:t(0,23)=r(0,23);-32768;32767;",128,0,0,0
  39               		.stabs	"bool:t(0,24)=@s8;-16;",128,0,0,0
  40               		.stabs	"__vtbl_ptr_type:t(0,25)=*(0,26)=f(0,9)",128,0,0,0
  41               		.stabs	"decltype(nullptr):t(0,27)=(0,27)",128,0,0,0
  42               		.stabs	"int8_t:t(0,28)=(0,16)",128,0,121,0
  43               		.stabs	"uint8_t:t(0,29)=(0,13)",128,0,122,0
  44               		.stabs	"int16_t:t(0,30)=(0,9)",128,0,123,0
  45               		.stabs	"uint16_t:t(0,31)=(0,12)",128,0,124,0
  46               		.stabs	"int32_t:t(0,32)=(0,15)",128,0,125,0
  47               		.stabs	"uint32_t:t(0,33)=(0,11)",128,0,126,0
  48               		.stabs	"int64_t:t(0,34)=(0,14)",128,0,128,0
  49               		.stabs	"uint64_t:t(0,35)=(0,10)",128,0,129,0
  50               		.stabs	"intptr_t:t(0,36)=(0,30)",128,0,142,0
  51               		.stabs	"uintptr_t:t(0,37)=(0,31)",128,0,147,0
  52               		.stabs	"int_least8_t:t(0,38)=(0,28)",128,0,159,0
  53               		.stabs	"uint_least8_t:t(0,39)=(0,29)",128,0,164,0
  54               		.stabs	"int_least16_t:t(0,40)=(0,30)",128,0,169,0
  55               		.stabs	"uint_least16_t:t(0,41)=(0,31)",128,0,174,0
  56               		.stabs	"int_least32_t:t(0,42)=(0,32)",128,0,179,0
  57               		.stabs	"uint_least32_t:t(0,43)=(0,33)",128,0,184,0
GAS LISTING /tmp/ccb1Z8O1.s 			page 2


  58               		.stabs	"int_least64_t:t(0,44)=(0,34)",128,0,192,0
  59               		.stabs	"uint_least64_t:t(0,45)=(0,35)",128,0,199,0
  60               		.stabs	"int_fast8_t:t(0,46)=(0,28)",128,0,213,0
  61               		.stabs	"uint_fast8_t:t(0,47)=(0,29)",128,0,218,0
  62               		.stabs	"int_fast16_t:t(0,48)=(0,30)",128,0,223,0
  63               		.stabs	"uint_fast16_t:t(0,49)=(0,31)",128,0,228,0
  64               		.stabs	"int_fast32_t:t(0,50)=(0,32)",128,0,233,0
  65               		.stabs	"uint_fast32_t:t(0,51)=(0,33)",128,0,238,0
  66               		.stabs	"int_fast64_t:t(0,52)=(0,34)",128,0,246,0
  67               		.stabs	"uint_fast64_t:t(0,53)=(0,35)",128,0,253,0
  68               		.stabs	"intmax_t:t(0,54)=(0,34)",128,0,273,0
  69               		.stabs	"uintmax_t:t(0,55)=(0,35)",128,0,278,0
  70               		.stabs	"int_farptr_t:t(0,56)=(0,32)",128,0,77,0
  71               		.stabs	"uint_farptr_t:t(0,57)=(0,33)",128,0,81,0
  72               		.stabs	"._0:Tt(0,58)=s3low:(0,13),0,8;high:(0,13),8,8;extended:(0,13),16,8;;",128,0,240,0
  73               		.stabs	"__fuse_t:t(0,58)",128,0,244,0
  74               		.stabs	"LibRobot:Tt(0,59)=s1__base_ctor ::(0,60)=#(0,59),(0,4),(0,61)=*(0,59),(0,4);:_ZN8LibRobotC
  75               		.stabs	"_ZN8LibRobotC2Ev:F(0,4)",36,0,21,_ZN8LibRobotC2Ev
  76               		.stabs	"this:P(0,68)=k(0,61)",64,0,21,24
  77               	.global	_ZN8LibRobotC2Ev
  78               		.type	_ZN8LibRobotC2Ev, @function
  79               	_ZN8LibRobotC2Ev:
  80               		.stabd	46,0,0
   1:libRobot.cpp  **** /****************************************************************************
   2:libRobot.cpp  ****  * Fichier: libRobot.cpp
   3:libRobot.cpp  ****  * Auteur: Yannick Ouellet, David Mainville, Mario Saliby, Youssef ZEMMAHI
   4:libRobot.cpp  ****  * Date: 24 Ocotbre 2013
   5:libRobot.cpp  ****  * DESCRIPTION : Lib pour le robot
   6:libRobot.cpp  ****  ****************************************************************************/
   7:libRobot.cpp  **** 
   8:libRobot.cpp  **** /* Information sur branchements */
   9:libRobot.cpp  **** /* Port B0 branché sur +        */
  10:libRobot.cpp  **** /* Port B1 branché sur -        */
  11:libRobot.cpp  **** 
  12:libRobot.cpp  **** #define F_CPU 8000000UL
  13:libRobot.cpp  **** #include <avr/io.h>
  14:libRobot.cpp  **** #include <util/delay.h>
  15:libRobot.cpp  **** #include <avr/interrupt.h>
  16:libRobot.cpp  **** #include "libRobot.h"
  17:libRobot.cpp  **** 
  18:libRobot.cpp  **** #define BOUTON_ENFONCE (PIND & _BV(2))
  19:libRobot.cpp  **** 
  20:libRobot.cpp  **** 
  21:libRobot.cpp  **** LibRobot::LibRobot(){}
  81               		.stabn	68,0,21,.LM0-.LFBB1
  82               	.LM0:
  83               	.LFBB1:
  84               	/* prologue: function */
  85               	/* frame size = 0 */
  86               	/* stack size = 0 */
  87               	.L__stack_usage = 0
  88 0000 0895      		ret
  89               		.size	_ZN8LibRobotC2Ev, .-_ZN8LibRobotC2Ev
  90               	.Lscope1:
  91               		.stabs	"",36,0,0,.Lscope1-.LFBB1
  92               		.stabd	78,0,0
  93               	.global	_ZN8LibRobotC1Ev
GAS LISTING /tmp/ccb1Z8O1.s 			page 3


  94               		.set	_ZN8LibRobotC1Ev,_ZN8LibRobotC2Ev
  95               		.stabs	"_ZN8LibRobotD2Ev:F(0,4)",36,0,22,_ZN8LibRobotD2Ev
  96               		.stabs	"this:P(0,68)",64,0,22,24
  97               	.global	_ZN8LibRobotD2Ev
  98               		.type	_ZN8LibRobotD2Ev, @function
  99               	_ZN8LibRobotD2Ev:
 100               		.stabd	46,0,0
  22:libRobot.cpp  **** LibRobot::~LibRobot(){}
 101               		.stabn	68,0,22,.LM1-.LFBB2
 102               	.LM1:
 103               	.LFBB2:
 104               	/* prologue: function */
 105               	/* frame size = 0 */
 106               	/* stack size = 0 */
 107               	.L__stack_usage = 0
 108 0002 0895      		ret
 109               		.size	_ZN8LibRobotD2Ev, .-_ZN8LibRobotD2Ev
 110               	.Lscope2:
 111               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 112               		.stabd	78,0,0
 113               	.global	_ZN8LibRobotD1Ev
 114               		.set	_ZN8LibRobotD1Ev,_ZN8LibRobotD2Ev
 115               		.stabs	"_ZN8LibRobot16BoutonEstEnfonceEv:F(0,29)",36,0,25,_ZN8LibRobot16BoutonEstEnfonceEv
 116               	.global	_ZN8LibRobot16BoutonEstEnfonceEv
 117               		.type	_ZN8LibRobot16BoutonEstEnfonceEv, @function
 118               	_ZN8LibRobot16BoutonEstEnfonceEv:
 119               		.stabd	46,0,0
  23:libRobot.cpp  **** 
  24:libRobot.cpp  **** // Fonction pour vérifier l'état du bouton en prenant compte du rebond
  25:libRobot.cpp  **** uint8_t LibRobot::BoutonEstEnfonce()
  26:libRobot.cpp  **** { 
 120               		.stabn	68,0,26,.LM2-.LFBB3
 121               	.LM2:
 122               	.LFBB3:
 123               	/* prologue: function */
 124               	/* frame size = 0 */
 125               	/* stack size = 0 */
 126               	.L__stack_usage = 0
  27:libRobot.cpp  ****   //Require -- DDRB = 0xff; // PORT B est en mode sortie.
  28:libRobot.cpp  ****   
  29:libRobot.cpp  ****     if(BOUTON_ENFONCE)
 127               		.stabn	68,0,29,.LM3-.LFBB3
 128               	.LM3:
 129 0004 4A9B      		sbis 0x9,2
 130 0006 00C0      		rjmp .L6
 131               	.LBB26:
 132               	.LBB27:
 133               		.stabs	"/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h",132,0,0,.Ltext1
 134               	.Ltext1:
   1:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
GAS LISTING /tmp/ccb1Z8O1.s 			page 4


   9:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  35:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #endif
  41:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  42:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  46:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** /** \file */
  47:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     \code
  49:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     \endcode
  53:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     used.
  58:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  59:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
GAS LISTING /tmp/ccb1Z8O1.s 			page 5


  66:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  68:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  77:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  81:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** */
  82:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #endif
  87:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  88:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #endif
  93:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  94:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #endif
  97:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #  include <math.h>
 102:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #endif
 103:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 104:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** /**
 105:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 107:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 109:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 112:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 114:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 120:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
GAS LISTING /tmp/ccb1Z8O1.s 			page 6


 123:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 125:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 129:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 132:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 140:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****  */
 141:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** void
 142:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** {
 144:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 153:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 156:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 159:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 	#else
 160:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 		//round up by default
 161:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 	#endif
 163:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 
 164:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 135               		.stabn	68,0,164,.LM4-.LFBB3
 136               	.LM4:
 137 0008 8FE1      		ldi r24,lo8(19999)
 138 000a 9EE4      		ldi r25,hi8(19999)
 139 000c 0197      		1: sbiw r24,1
 140 000e 01F4      		brne 1b
 141 0010 00C0      		rjmp .
 142 0012 0000      		nop
 143               	.LBE27:
 144               	.LBE26:
 145               		.stabs	"libRobot.cpp",132,0,0,.Ltext2
 146               	.Ltext2:
  30:libRobot.cpp  ****     {
  31:libRobot.cpp  ****         // Anti-Rebond
  32:libRobot.cpp  ****         _delay_ms(10);
GAS LISTING /tmp/ccb1Z8O1.s 			page 7


  33:libRobot.cpp  ****         // Revérification du bouton suite au delais pour s'assurer de sa valeur
  34:libRobot.cpp  **** 
  35:libRobot.cpp  ****         // l'operateur !! permet de transformer une valeur quelconque en 0 ou 1.
  36:libRobot.cpp  ****         // ie: BOUTON_ENFONCE renvoit 2, !!2 = 1.
  37:libRobot.cpp  ****         return !!BOUTON_ENFONCE;
 147               		.stabn	68,0,37,.LM5-.LFBB3
 148               	.LM5:
 149 0014 89B1      		in r24,0x9
 150 0016 82FB      		bst r24,2
 151 0018 8827      		clr r24
 152 001a 80F9      		bld r24,0
 153 001c 0895      		ret
 154               	.L6:
  38:libRobot.cpp  ****     }
  39:libRobot.cpp  ****     // Le bouton n'est pas enfoncé
  40:libRobot.cpp  ****     return 0;
 155               		.stabn	68,0,40,.LM6-.LFBB3
 156               	.LM6:
 157 001e 80E0      		ldi r24,0
  41:libRobot.cpp  **** }
 158               		.stabn	68,0,41,.LM7-.LFBB3
 159               	.LM7:
 160 0020 0895      		ret
 161               		.size	_ZN8LibRobot16BoutonEstEnfonceEv, .-_ZN8LibRobot16BoutonEstEnfonceEv
 162               	.Lscope3:
 163               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 164               		.stabd	78,0,0
 165               		.stabs	"_ZN8LibRobot11attenuerDELEb:F(0,4)",36,0,43,_ZN8LibRobot11attenuerDELEb
 166               		.stabs	"rouge:P(0,24)",64,0,43,24
 167               	.global	_ZN8LibRobot11attenuerDELEb
 168               		.type	_ZN8LibRobot11attenuerDELEb, @function
 169               	_ZN8LibRobot11attenuerDELEb:
 170               		.stabd	46,0,0
  42:libRobot.cpp  **** 
  43:libRobot.cpp  **** void LibRobot::attenuerDEL(bool rouge){
 171               		.stabn	68,0,43,.LM8-.LFBB4
 172               	.LM8:
 173               	.LFBB4:
 174               	/* prologue: function */
 175               	/* frame size = 0 */
 176               	/* stack size = 0 */
 177               	.L__stack_usage = 0
 178               	.LBB28:
 179               	.LBB29:
 180               	.LBB30:
 181               	.LBB31:
  44:libRobot.cpp  ****   
  45:libRobot.cpp  ****   /* Information sur branchements */
  46:libRobot.cpp  ****   /* Port B0 branché sur +        */
  47:libRobot.cpp  ****   /* Port B1 branché sur -        */
  48:libRobot.cpp  ****   
  49:libRobot.cpp  ****   //Require -- DDRB = 0xff; // PORT B est en mode sortie.
  50:libRobot.cpp  ****   
  51:libRobot.cpp  ****   const uint16_t dureeOperation = 1000; //en us
  52:libRobot.cpp  ****   const uint16_t nbOperation = 1000; //1000 operations seconde
  53:libRobot.cpp  ****   
  54:libRobot.cpp  ****   for(uint16_t j = 0; j< nbOperation; j++)
GAS LISTING /tmp/ccb1Z8O1.s 			page 8


  55:libRobot.cpp  ****   {
  56:libRobot.cpp  ****       for(uint8_t i =0; i< 3; i++)
  57:libRobot.cpp  ****       {
  58:libRobot.cpp  **** 	  uint16_t attenteAllumee = dureeOperation-j; //en micro seconde
  59:libRobot.cpp  **** 	  uint16_t attenteEteint = dureeOperation-attenteAllumee;    
  60:libRobot.cpp  **** 
  61:libRobot.cpp  **** 	  if(rouge)
  62:libRobot.cpp  **** 	      PORTB = _BV(PORTB0); //Rouge
  63:libRobot.cpp  **** 	  else
  64:libRobot.cpp  **** 	      PORTB = _BV(PORTB1); //Vert
  65:libRobot.cpp  **** 	      
  66:libRobot.cpp  **** 	  _delay_loop_2(attenteAllumee*2+1);
  67:libRobot.cpp  **** 	  
  68:libRobot.cpp  **** 	  PORTB = 0x0;
  69:libRobot.cpp  **** 	  _delay_loop_2(attenteEteint*2+1);
 182               		.stabn	68,0,69,.LM9-.LFBB4
 183               	.LM9:
 184 0022 21ED      		ldi r18,lo8(-47)
 185 0024 37E0      		ldi r19,lo8(7)
 186 0026 62ED      		ldi r22,lo8(-46)
 187 0028 77E0      		ldi r23,lo8(7)
  64:libRobot.cpp  **** 	      PORTB = _BV(PORTB1); //Vert
 188               		.stabn	68,0,64,.LM10-.LFBB4
 189               	.LM10:
 190 002a A2E0      		ldi r26,lo8(2)
  62:libRobot.cpp  **** 	      PORTB = _BV(PORTB0); //Rouge
 191               		.stabn	68,0,62,.LM11-.LFBB4
 192               	.LM11:
 193 002c B1E0      		ldi r27,lo8(1)
 194 002e 00C0      		rjmp .L8
 195               	.L11:
  61:libRobot.cpp  **** 	  if(rouge)
 196               		.stabn	68,0,61,.LM12-.LFBB4
 197               	.LM12:
 198 0030 8823      		tst r24
 199 0032 01F0      		breq .L9
  62:libRobot.cpp  **** 	      PORTB = _BV(PORTB0); //Rouge
 200               		.stabn	68,0,62,.LM13-.LFBB4
 201               	.LM13:
 202 0034 B5B9      		out 0x5,r27
 203 0036 00C0      		rjmp .L10
 204               	.L9:
  64:libRobot.cpp  **** 	      PORTB = _BV(PORTB1); //Vert
 205               		.stabn	68,0,64,.LM14-.LFBB4
 206               	.LM14:
 207 0038 A5B9      		out 0x5,r26
 208               	.L10:
 209               	.LBB32:
 210               	.LBB33:
 211               		.stabs	"/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext3
 212               	.Ltext3:
   1:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
   5:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
GAS LISTING /tmp/ccb1Z8O1.s 			page 9


   7:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
   8:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  11:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****      distribution.
  15:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  16:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  20:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  32:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h 2143 2010-06-08 21:19:51Z joerg_wunsch $ */
  33:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  34:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  37:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  39:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  40:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  41:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  42:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** #endif
  43:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  44:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** /** \file */
  45:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  46:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     \code
  47:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  48:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     \endcode
  49:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  50:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  51:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  52:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  53:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  54:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  55:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  56:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  57:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  58:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  59:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  60:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  61:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  62:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  63:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     to the overall delay time.
GAS LISTING /tmp/ccb1Z8O1.s 			page 10


  64:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  65:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  66:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  67:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** */
  68:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  69:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  71:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     register.
  76:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  77:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** */
  80:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** void
  81:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** {
  83:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 	);
  89:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** }
  90:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  91:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  93:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 
  99:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h ****  */
 102:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** void
 103:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** {
 105:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 106:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 		"1: sbiw %0,1" "\n\t"
 107:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 		"brne 1b"
 108:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 		: "=w" (__count)
 109:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
 110:/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h **** 	);
 213               		.stabn	68,0,110,.LM15-.LFBB4
 214               	.LM15:
 215 003a F901      		movw r30,r18
 216               	/* #APP */
 217               	 ;  110 "/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h" 1
 218 003c 3197      		1: sbiw r30,1
 219 003e 01F4      		brne 1b
 220               	 ;  0 "" 2
 221               	/* #NOAPP */
 222               	.LBE33:
GAS LISTING /tmp/ccb1Z8O1.s 			page 11


 223               	.LBE32:
 224               		.stabs	"libRobot.cpp",132,0,0,.Ltext4
 225               	.Ltext4:
  68:libRobot.cpp  **** 	  PORTB = 0x0;
 226               		.stabn	68,0,68,.LM16-.LFBB4
 227               	.LM16:
 228 0040 15B8      		out 0x5,__zero_reg__
 229               	.LBB34:
 230               	.LBB35:
 231               		.stabs	"/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext5
 232               	.Ltext5:
 233               		.stabn	68,0,110,.LM17-.LFBB4
 234               	.LM17:
 235 0042 FA01      		movw r30,r20
 236               	/* #APP */
 237               	 ;  110 "/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h" 1
 238 0044 3197      		1: sbiw r30,1
 239 0046 01F4      		brne 1b
 240               	 ;  0 "" 2
 241               	/* #NOAPP */
 242 0048 9150      		subi r25,lo8(-(-1))
 243               	.LBE35:
 244               	.LBE34:
 245               	.LBE31:
 246               		.stabs	"libRobot.cpp",132,0,0,.Ltext6
 247               	.Ltext6:
  56:libRobot.cpp  ****       for(uint8_t i =0; i< 3; i++)
 248               		.stabn	68,0,56,.LM18-.LFBB4
 249               	.LM18:
 250 004a 01F4      		brne .L11
 251 004c 2250      		subi r18,2
 252 004e 3109      		sbc r19,__zero_reg__
 253               	.LBE30:
  54:libRobot.cpp  ****   for(uint16_t j = 0; j< nbOperation; j++)
 254               		.stabn	68,0,54,.LM19-.LFBB4
 255               	.LM19:
 256 0050 2130      		cpi r18,1
 257 0052 3105      		cpc r19,__zero_reg__
 258 0054 01F0      		breq .L7
 259               	.L8:
 260               	.LBB37:
 261               	.LBB36:
 262               		.stabn	68,0,69,.LM20-.LFBB4
 263               	.LM20:
 264 0056 AB01      		movw r20,r22
 265 0058 421B      		sub r20,r18
 266 005a 530B      		sbc r21,r19
 267 005c 93E0      		ldi r25,lo8(3)
 268 005e 00C0      		rjmp .L11
 269               	.L7:
 270 0060 0895      		ret
 271               	.LBE36:
 272               	.LBE37:
 273               	.LBE29:
 274               	.LBE28:
 275               		.size	_ZN8LibRobot11attenuerDELEb, .-_ZN8LibRobot11attenuerDELEb
 276               	.Lscope4:
GAS LISTING /tmp/ccb1Z8O1.s 			page 12


 277               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 278               		.stabd	78,0,0
 279               		.stabs	"_ZN8LibRobot17tournerRoueDroiteEjjibh:F(0,4)",36,0,76,_ZN8LibRobot17tournerRoueDroiteEjjib
 280               		.stabs	"dureeAllumee:P(0,31)",64,0,76,24
 281               		.stabs	"periode:P(0,31)",64,0,76,22
 282               		.stabs	"duree:P(0,9)",64,0,76,20
 283               		.stabs	"sens:P(0,24)",64,0,76,18
 284               		.stabs	"port:P(0,29)",64,0,76,16
 285               	.global	_ZN8LibRobot17tournerRoueDroiteEjjibh
 286               		.type	_ZN8LibRobot17tournerRoueDroiteEjjibh, @function
 287               	_ZN8LibRobot17tournerRoueDroiteEjjibh:
 288               		.stabd	46,0,0
  70:libRobot.cpp  ****       }
  71:libRobot.cpp  ****     
  72:libRobot.cpp  ****   }
  73:libRobot.cpp  ****   
  74:libRobot.cpp  **** }
  75:libRobot.cpp  **** 
  76:libRobot.cpp  **** void LibRobot::tournerRoueDroite(uint16_t dureeAllumee, uint16_t periode,  int duree, bool sens, ui
  77:libRobot.cpp  **** {
 289               		.stabn	68,0,77,.LM21-.LFBB5
 290               	.LM21:
 291               	.LFBB5:
 292 0062 CF93      		push r28
 293 0064 DF93      		push r29
 294               	/* prologue: function */
 295               	/* frame size = 0 */
 296               	/* stack size = 2 */
 297               	.L__stack_usage = 2
 298               	.LBB38:
  78:libRobot.cpp  ****     //dureeAllumee nb milliseconde allumee pour une periode (A)
  79:libRobot.cpp  ****     //periode nb milliseconde pour une periode (B)
  80:libRobot.cpp  ****     //duree nb milliseconde de roulement total
  81:libRobot.cpp  ****     //sens = true --> avancer, sinon reculer
  82:libRobot.cpp  ****   
  83:libRobot.cpp  ****     /* Information sur branchements */
  84:libRobot.cpp  ****     /* Port C0 branché sur JM1+    enable    */
  85:libRobot.cpp  ****     /* Port C1 branché sur JM1-    direction    */
  86:libRobot.cpp  ****   
  87:libRobot.cpp  ****     uint16_t attenteAllumee = dureeAllumee;
  88:libRobot.cpp  ****     uint16_t attenteEteint = periode - attenteAllumee;
  89:libRobot.cpp  **** 
  90:libRobot.cpp  ****     //affectePort(port, 0x0); //
  91:libRobot.cpp  ****     PORTC = 0x0;
 299               		.stabn	68,0,91,.LM22-.LFBB5
 300               	.LM22:
 301 0066 18B8      		out 0x8,__zero_reg__
 302               	.LBB39:
  92:libRobot.cpp  **** 
  93:libRobot.cpp  ****     int dureeCourante = 0;
  94:libRobot.cpp  ****     while(dureeCourante < duree)
  95:libRobot.cpp  ****     {
  96:libRobot.cpp  **** 	dureeCourante += periode;
  97:libRobot.cpp  **** 	for(uint8_t i =0; i< 2; i++)
  98:libRobot.cpp  **** 	{
  99:libRobot.cpp  **** 	    //affectePort(port, getPort(port, 0)); //
 100:libRobot.cpp  **** 	    PORTC = _BV(PORTC0);
GAS LISTING /tmp/ccb1Z8O1.s 			page 13


 101:libRobot.cpp  **** 	    
 102:libRobot.cpp  **** 	    if(!sens) //Aller a reculon
 103:libRobot.cpp  **** 		PORTC |= _BV(PORTC1);//ajoutePort(port, getPort(port, 1)); //
 104:libRobot.cpp  **** 	    _delay_loop_2((attenteAllumee<<1)+1); //Pour F_CPU 8000000UL
 303               		.stabn	68,0,104,.LM23-.LFBB5
 304               	.LM23:
 305 0068 FC01      		movw r30,r24
 306 006a EE0F      		lsl r30
 307 006c FF1F      		rol r31
 308 006e 3196      		adiw r30,1
 309               	.LBE39:
  88:libRobot.cpp  ****     uint16_t attenteEteint = periode - attenteAllumee;
 310               		.stabn	68,0,88,.LM24-.LFBB5
 311               	.LM24:
 312 0070 DB01      		movw r26,r22
 313 0072 A81B      		sub r26,r24
 314 0074 B90B      		sbc r27,r25
 315 0076 CD01      		movw r24,r26
 316               	.LBB48:
 105:libRobot.cpp  **** 	    
 106:libRobot.cpp  **** 	    //affectePort(port, 0x0); //
 107:libRobot.cpp  **** 	    PORTC = 0x0;
 108:libRobot.cpp  **** 	    _delay_loop_2((attenteEteint<<1)+1);
 317               		.stabn	68,0,108,.LM25-.LFBB5
 318               	.LM25:
 319 0078 880F      		lsl r24
 320 007a 991F      		rol r25
 321 007c 0196      		adiw r24,1
 322               	.LBE48:
  93:libRobot.cpp  ****     int dureeCourante = 0;
 323               		.stabn	68,0,93,.LM26-.LFBB5
 324               	.LM26:
 325 007e A0E0      		ldi r26,0
 326 0080 B0E0      		ldi r27,0
 327               	.LBB49:
 100:libRobot.cpp  **** 	    PORTC = _BV(PORTC0);
 328               		.stabn	68,0,100,.LM27-.LFBB5
 329               	.LM27:
 330 0082 31E0      		ldi r19,lo8(1)
 331               	.LBE49:
  94:libRobot.cpp  ****     while(dureeCourante < duree)
 332               		.stabn	68,0,94,.LM28-.LFBB5
 333               	.LM28:
 334 0084 00C0      		rjmp .L15
 335               	.L18:
  76:libRobot.cpp  **** void LibRobot::tournerRoueDroite(uint16_t dureeAllumee, uint16_t periode,  int duree, bool sens, ui
 336               		.stabn	68,0,76,.LM29-.LFBB5
 337               	.LM29:
 338 0086 A60F      		add r26,r22
 339 0088 B71F      		adc r27,r23
 340               	.LBB50:
 100:libRobot.cpp  **** 	    PORTC = _BV(PORTC0);
 341               		.stabn	68,0,100,.LM30-.LFBB5
 342               	.LM30:
 343 008a 38B9      		out 0x8,r19
 102:libRobot.cpp  **** 	    if(!sens) //Aller a reculon
 344               		.stabn	68,0,102,.LM31-.LFBB5
GAS LISTING /tmp/ccb1Z8O1.s 			page 14


 345               	.LM31:
 346 008c 2111      		cpse r18,__zero_reg__
 347 008e 00C0      		rjmp .L16
 103:libRobot.cpp  **** 		PORTC |= _BV(PORTC1);//ajoutePort(port, getPort(port, 1)); //
 348               		.stabn	68,0,103,.LM32-.LFBB5
 349               	.LM32:
 350 0090 419A      		sbi 0x8,1
 351               	.L16:
 352               	.LBB40:
 353               	.LBB41:
 354               		.stabs	"/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext7
 355               	.Ltext7:
 356               		.stabn	68,0,110,.LM33-.LFBB5
 357               	.LM33:
 358 0092 EF01      		movw r28,r30
 359               	/* #APP */
 360               	 ;  110 "/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h" 1
 361 0094 2197      		1: sbiw r28,1
 362 0096 01F4      		brne 1b
 363               	 ;  0 "" 2
 364               	/* #NOAPP */
 365               	.LBE41:
 366               	.LBE40:
 367               		.stabs	"libRobot.cpp",132,0,0,.Ltext8
 368               	.Ltext8:
 107:libRobot.cpp  **** 	    PORTC = 0x0;
 369               		.stabn	68,0,107,.LM34-.LFBB5
 370               	.LM34:
 371 0098 18B8      		out 0x8,__zero_reg__
 372               	.LBB43:
 373               	.LBB44:
 374               		.stabs	"/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext9
 375               	.Ltext9:
 376               		.stabn	68,0,110,.LM35-.LFBB5
 377               	.LM35:
 378 009a EC01      		movw r28,r24
 379               	/* #APP */
 380               	 ;  110 "/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h" 1
 381 009c 2197      		1: sbiw r28,1
 382 009e 01F4      		brne 1b
 383               	 ;  0 "" 2
 384               	/* #NOAPP */
 385               	.LBE44:
 386               	.LBE43:
 387               		.stabs	"libRobot.cpp",132,0,0,.Ltext10
 388               	.Ltext10:
 100:libRobot.cpp  **** 	    PORTC = _BV(PORTC0);
 389               		.stabn	68,0,100,.LM36-.LFBB5
 390               	.LM36:
 391 00a0 38B9      		out 0x8,r19
 102:libRobot.cpp  **** 	    if(!sens) //Aller a reculon
 392               		.stabn	68,0,102,.LM37-.LFBB5
 393               	.LM37:
 394 00a2 2111      		cpse r18,__zero_reg__
 395 00a4 00C0      		rjmp .L17
 103:libRobot.cpp  **** 		PORTC |= _BV(PORTC1);//ajoutePort(port, getPort(port, 1)); //
 396               		.stabn	68,0,103,.LM38-.LFBB5
GAS LISTING /tmp/ccb1Z8O1.s 			page 15


 397               	.LM38:
 398 00a6 419A      		sbi 0x8,1
 399               	.L17:
 400               	.LBB46:
 401               	.LBB42:
 402               		.stabs	"/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext11
 403               	.Ltext11:
 404               		.stabn	68,0,110,.LM39-.LFBB5
 405               	.LM39:
 406 00a8 EF01      		movw r28,r30
 407               	/* #APP */
 408               	 ;  110 "/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h" 1
 409 00aa 2197      		1: sbiw r28,1
 410 00ac 01F4      		brne 1b
 411               	 ;  0 "" 2
 412               	/* #NOAPP */
 413               	.LBE42:
 414               	.LBE46:
 415               		.stabs	"libRobot.cpp",132,0,0,.Ltext12
 416               	.Ltext12:
 107:libRobot.cpp  **** 	    PORTC = 0x0;
 417               		.stabn	68,0,107,.LM40-.LFBB5
 418               	.LM40:
 419 00ae 18B8      		out 0x8,__zero_reg__
 420               	.LBB47:
 421               	.LBB45:
 422               		.stabs	"/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext13
 423               	.Ltext13:
 424               		.stabn	68,0,110,.LM41-.LFBB5
 425               	.LM41:
 426 00b0 EC01      		movw r28,r24
 427               	/* #APP */
 428               	 ;  110 "/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h" 1
 429 00b2 2197      		1: sbiw r28,1
 430 00b4 01F4      		brne 1b
 431               	 ;  0 "" 2
 432               	/* #NOAPP */
 433               	.L15:
 434               	.LBE45:
 435               	.LBE47:
 436               	.LBE50:
 437               		.stabs	"libRobot.cpp",132,0,0,.Ltext14
 438               	.Ltext14:
  94:libRobot.cpp  ****     while(dureeCourante < duree)
 439               		.stabn	68,0,94,.LM42-.LFBB5
 440               	.LM42:
 441 00b6 A417      		cp r26,r20
 442 00b8 B507      		cpc r27,r21
 443 00ba 04F0      		brlt .L18
 444               	/* epilogue start */
 445               	.LBE38:
 109:libRobot.cpp  **** 	}
 110:libRobot.cpp  ****     }
 111:libRobot.cpp  **** }
 446               		.stabn	68,0,111,.LM43-.LFBB5
 447               	.LM43:
 448 00bc DF91      		pop r29
GAS LISTING /tmp/ccb1Z8O1.s 			page 16


 449 00be CF91      		pop r28
 450 00c0 0895      		ret
 451               		.size	_ZN8LibRobot17tournerRoueDroiteEjjibh, .-_ZN8LibRobot17tournerRoueDroiteEjjibh
 452               		.stabs	"dureeCourante:r(0,9)",64,0,93,26
 453               		.stabn	192,0,0,.LBB38-.LFBB5
 454               		.stabn	224,0,0,.LBE38-.LFBB5
 455               	.Lscope5:
 456               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 457               		.stabd	78,0,0
 458               		.stabs	"_ZN8LibRobot11affectePortEhj:F(0,4)",36,0,113,_ZN8LibRobot11affectePortEhj
 459               		.stabs	"port:P(0,29)",64,0,113,24
 460               	.global	_ZN8LibRobot11affectePortEhj
 461               		.type	_ZN8LibRobot11affectePortEhj, @function
 462               	_ZN8LibRobot11affectePortEhj:
 463               		.stabd	46,0,0
 112:libRobot.cpp  **** 
 113:libRobot.cpp  **** void LibRobot::affectePort(uint8_t port, uint16_t valeur)
 114:libRobot.cpp  **** {
 464               		.stabn	68,0,114,.LM44-.LFBB6
 465               	.LM44:
 466               	.LFBB6:
 467               	/* prologue: function */
 468               	/* frame size = 0 */
 469               	/* stack size = 0 */
 470               	.L__stack_usage = 0
 115:libRobot.cpp  ****     //port == 0 --> portA
 116:libRobot.cpp  ****     //port == 1 --> portB
 117:libRobot.cpp  ****     //port == 2 --> portC
 118:libRobot.cpp  ****     //port == 3 --> portD
 119:libRobot.cpp  ****   
 120:libRobot.cpp  ****     if(port == 0)
 471               		.stabn	68,0,120,.LM45-.LFBB6
 472               	.LM45:
 473 00c2 8111      		cpse r24,__zero_reg__
 474 00c4 00C0      		rjmp .L20
 121:libRobot.cpp  ****     {
 122:libRobot.cpp  **** 	PORTA = valeur;
 475               		.stabn	68,0,122,.LM46-.LFBB6
 476               	.LM46:
 477 00c6 62B9      		out 0x2,r22
 478 00c8 0895      		ret
 479               	.L20:
 123:libRobot.cpp  ****     }
 124:libRobot.cpp  ****     else if(port == 1)
 480               		.stabn	68,0,124,.LM47-.LFBB6
 481               	.LM47:
 482 00ca 8130      		cpi r24,lo8(1)
 483 00cc 01F4      		brne .L22
 125:libRobot.cpp  ****     {
 126:libRobot.cpp  **** 	PORTB = valeur;
 484               		.stabn	68,0,126,.LM48-.LFBB6
 485               	.LM48:
 486 00ce 65B9      		out 0x5,r22
 487 00d0 0895      		ret
 488               	.L22:
 489               	.LBB53:
 490               	.LBB54:
GAS LISTING /tmp/ccb1Z8O1.s 			page 17


 127:libRobot.cpp  ****     }
 128:libRobot.cpp  ****     else if(port == 2)
 491               		.stabn	68,0,128,.LM49-.LFBB6
 492               	.LM49:
 493 00d2 8230      		cpi r24,lo8(2)
 494 00d4 01F4      		brne .L23
 129:libRobot.cpp  ****     {
 130:libRobot.cpp  **** 	PORTC = valeur;
 495               		.stabn	68,0,130,.LM50-.LFBB6
 496               	.LM50:
 497 00d6 68B9      		out 0x8,r22
 498 00d8 0895      		ret
 499               	.L23:
 131:libRobot.cpp  ****     }
 132:libRobot.cpp  ****     else if(port == 3)
 500               		.stabn	68,0,132,.LM51-.LFBB6
 501               	.LM51:
 502 00da 8330      		cpi r24,lo8(3)
 503 00dc 01F4      		brne .L19
 133:libRobot.cpp  ****     {
 134:libRobot.cpp  **** 	PORTD = valeur;
 504               		.stabn	68,0,134,.LM52-.LFBB6
 505               	.LM52:
 506 00de 6BB9      		out 0xb,r22
 507               	.L19:
 508 00e0 0895      		ret
 509               	.LBE54:
 510               	.LBE53:
 511               		.size	_ZN8LibRobot11affectePortEhj, .-_ZN8LibRobot11affectePortEhj
 512               	.Lscope6:
 513               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 514               		.stabd	78,0,0
 515               		.stabs	"_ZN8LibRobot10ajoutePortEhj:F(0,4)",36,0,138,_ZN8LibRobot10ajoutePortEhj
 516               		.stabs	"port:P(0,29)",64,0,138,24
 517               	.global	_ZN8LibRobot10ajoutePortEhj
 518               		.type	_ZN8LibRobot10ajoutePortEhj, @function
 519               	_ZN8LibRobot10ajoutePortEhj:
 520               		.stabd	46,0,0
 135:libRobot.cpp  ****     }
 136:libRobot.cpp  **** }
 137:libRobot.cpp  **** 
 138:libRobot.cpp  **** void LibRobot::ajoutePort(uint8_t port, uint16_t valeur)
 139:libRobot.cpp  **** {
 521               		.stabn	68,0,139,.LM53-.LFBB7
 522               	.LM53:
 523               	.LFBB7:
 524               	/* prologue: function */
 525               	/* frame size = 0 */
 526               	/* stack size = 0 */
 527               	.L__stack_usage = 0
 140:libRobot.cpp  ****     //port == 0 --> portA	else
 141:libRobot.cpp  **** 	{
 142:libRobot.cpp  **** 	    
 143:libRobot.cpp  **** 	}
 144:libRobot.cpp  ****     //port == 1 --> portB
 145:libRobot.cpp  ****     //port == 2 --> portC
 146:libRobot.cpp  ****     //port == 3 --> portD
GAS LISTING /tmp/ccb1Z8O1.s 			page 18


 147:libRobot.cpp  ****   
 148:libRobot.cpp  ****     if(port == 0)
 528               		.stabn	68,0,148,.LM54-.LFBB7
 529               	.LM54:
 530 00e2 8111      		cpse r24,__zero_reg__
 531 00e4 00C0      		rjmp .L25
 149:libRobot.cpp  ****     {
 150:libRobot.cpp  **** 	PORTA |= valeur;
 532               		.stabn	68,0,150,.LM55-.LFBB7
 533               	.LM55:
 534 00e6 82B1      		in r24,0x2
 535 00e8 862B      		or r24,r22
 536 00ea 82B9      		out 0x2,r24
 537 00ec 0895      		ret
 538               	.L25:
 151:libRobot.cpp  ****     }
 152:libRobot.cpp  ****     else if(port == 1)
 539               		.stabn	68,0,152,.LM56-.LFBB7
 540               	.LM56:
 541 00ee 8130      		cpi r24,lo8(1)
 542 00f0 01F4      		brne .L27
 153:libRobot.cpp  ****     {
 154:libRobot.cpp  **** 	PORTB |= valeur;
 543               		.stabn	68,0,154,.LM57-.LFBB7
 544               	.LM57:
 545 00f2 85B1      		in r24,0x5
 546 00f4 862B      		or r24,r22
 547 00f6 85B9      		out 0x5,r24
 548 00f8 0895      		ret
 549               	.L27:
 155:libRobot.cpp  ****     }
 156:libRobot.cpp  ****     else if(port == 2)
 550               		.stabn	68,0,156,.LM58-.LFBB7
 551               	.LM58:
 552 00fa 8230      		cpi r24,lo8(2)
 553 00fc 01F4      		brne .L28
 157:libRobot.cpp  ****     {
 158:libRobot.cpp  **** 	PORTC |= valeur;
 554               		.stabn	68,0,158,.LM59-.LFBB7
 555               	.LM59:
 556 00fe 88B1      		in r24,0x8
 557 0100 862B      		or r24,r22
 558 0102 88B9      		out 0x8,r24
 559 0104 0895      		ret
 560               	.L28:
 159:libRobot.cpp  ****     }
 160:libRobot.cpp  ****     else if(port == 3)
 561               		.stabn	68,0,160,.LM60-.LFBB7
 562               	.LM60:
 563 0106 8330      		cpi r24,lo8(3)
 564 0108 01F4      		brne .L24
 161:libRobot.cpp  ****     {
 162:libRobot.cpp  **** 	PORTD |= valeur;
 565               		.stabn	68,0,162,.LM61-.LFBB7
 566               	.LM61:
 567 010a 8BB1      		in r24,0xb
 568 010c 862B      		or r24,r22
GAS LISTING /tmp/ccb1Z8O1.s 			page 19


 569 010e 8BB9      		out 0xb,r24
 570               	.L24:
 571 0110 0895      		ret
 572               		.size	_ZN8LibRobot10ajoutePortEhj, .-_ZN8LibRobot10ajoutePortEhj
 573               	.Lscope7:
 574               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 575               		.stabd	78,0,0
 576               		.stabs	"_ZN8LibRobot7getPortEhh:F(0,31)",36,0,166,_ZN8LibRobot7getPortEhh
 577               		.stabs	"port:P(0,29)",64,0,166,24
 578               		.stabs	"numPort:P(0,29)",64,0,166,22
 579               	.global	_ZN8LibRobot7getPortEhh
 580               		.type	_ZN8LibRobot7getPortEhh, @function
 581               	_ZN8LibRobot7getPortEhh:
 582               		.stabd	46,0,0
 163:libRobot.cpp  ****     }
 164:libRobot.cpp  **** }
 165:libRobot.cpp  **** 
 166:libRobot.cpp  **** uint16_t LibRobot::getPort(uint8_t port, uint8_t numPort)
 167:libRobot.cpp  **** {
 583               		.stabn	68,0,167,.LM62-.LFBB8
 584               	.LM62:
 585               	.LFBB8:
 586               	/* prologue: function */
 587               	/* frame size = 0 */
 588               	/* stack size = 0 */
 589               	.L__stack_usage = 0
 168:libRobot.cpp  ****     //port == 0 --> portA
 169:libRobot.cpp  ****     //port == 1 --> portB
 170:libRobot.cpp  ****     //port == 2 --> portC
 171:libRobot.cpp  ****     //port == 3 --> portD
 172:libRobot.cpp  ****   
 173:libRobot.cpp  ****     //numPort == 0 -->portX0
 174:libRobot.cpp  ****     //numPort == 1 -->portX1...
 175:libRobot.cpp  ****   
 176:libRobot.cpp  ****     if(port == 0)
 590               		.stabn	68,0,176,.LM63-.LFBB8
 591               	.LM63:
 592 0112 8111      		cpse r24,__zero_reg__
 593 0114 00C0      		rjmp .L30
 594 0116 00C0      		rjmp .L85
 595               	.L33:
 177:libRobot.cpp  ****     {
 178:libRobot.cpp  **** 	if(numPort == 0)
 179:libRobot.cpp  **** 	  return _BV(PORTA0);
 180:libRobot.cpp  **** 	if(numPort == 1)
 181:libRobot.cpp  **** 	  return _BV(PORTA1);
 182:libRobot.cpp  **** 	if(numPort == 2)
 183:libRobot.cpp  **** 	  return _BV(PORTA2);
 184:libRobot.cpp  **** 	if(numPort == 3)
 185:libRobot.cpp  **** 	  return _BV(PORTA3);
 186:libRobot.cpp  **** 	if(numPort == 4)
 187:libRobot.cpp  **** 	  return _BV(PORTA4);
 188:libRobot.cpp  **** 	if(numPort == 5)
 189:libRobot.cpp  **** 	  return _BV(PORTA5);
 190:libRobot.cpp  **** 	if(numPort == 6)
 191:libRobot.cpp  **** 	  return _BV(PORTA6);
 192:libRobot.cpp  **** 	if(numPort == 7)
GAS LISTING /tmp/ccb1Z8O1.s 			page 20


 596               		.stabn	68,0,192,.LM64-.LFBB8
 597               	.LM64:
 598 0118 6730      		cpi r22,lo8(7)
 599 011a 01F0      		breq .L43
 600               	.L35:
 193:libRobot.cpp  **** 	  return _BV(PORTA7);
 194:libRobot.cpp  ****     }
 195:libRobot.cpp  ****     else if(port == 1)
 196:libRobot.cpp  ****     {
 197:libRobot.cpp  **** 	if(numPort == 0)
 198:libRobot.cpp  **** 	  return _BV(PORTB0);
 199:libRobot.cpp  **** 	if(numPort == 1)
 200:libRobot.cpp  **** 	  return _BV(PORTB1);
 201:libRobot.cpp  **** 	if(numPort == 2)
 202:libRobot.cpp  **** 	  return _BV(PORTB2);
 203:libRobot.cpp  **** 	if(numPort == 3)
 204:libRobot.cpp  **** 	  return _BV(PORTB3);
 205:libRobot.cpp  **** 	if(numPort == 4)
 206:libRobot.cpp  **** 	  return _BV(PORTB4);
 207:libRobot.cpp  **** 	if(numPort == 5)
 208:libRobot.cpp  **** 	  return _BV(PORTB5);
 209:libRobot.cpp  **** 	if(numPort == 6)
 210:libRobot.cpp  **** 	  return _BV(PORTB6);
 211:libRobot.cpp  **** 	if(numPort == 7)
 212:libRobot.cpp  **** 	  return _BV(PORTB7);
 213:libRobot.cpp  ****     }
 214:libRobot.cpp  ****     else if(port == 2)
 215:libRobot.cpp  ****     {
 216:libRobot.cpp  **** 	if(numPort == 0)
 217:libRobot.cpp  **** 	  return _BV(PORTC0);
 218:libRobot.cpp  **** 	if(numPort == 1)
 219:libRobot.cpp  **** 	  return _BV(PORTC1);
 220:libRobot.cpp  **** 	if(numPort == 2)
 221:libRobot.cpp  **** 	  return _BV(PORTC2);
 222:libRobot.cpp  **** 	if(numPort == 3)
 223:libRobot.cpp  **** 	  return _BV(PORTC3);
 224:libRobot.cpp  **** 	if(numPort == 4)
 225:libRobot.cpp  **** 	  return _BV(PORTC4);
 226:libRobot.cpp  **** 	if(numPort == 5)
 227:libRobot.cpp  **** 	  return _BV(PORTC5);
 228:libRobot.cpp  **** 	if(numPort == 6)
 229:libRobot.cpp  **** 	  return _BV(PORTC6);
 230:libRobot.cpp  **** 	if(numPort == 7)
 231:libRobot.cpp  **** 	  return _BV(PORTC7);
 232:libRobot.cpp  ****     }
 233:libRobot.cpp  ****     else if(port == 3)
 234:libRobot.cpp  ****     {
 235:libRobot.cpp  **** 	if(numPort == 0)
 236:libRobot.cpp  **** 	  return _BV(PORTD0);
 237:libRobot.cpp  **** 	if(numPort == 1)
 238:libRobot.cpp  **** 	  return _BV(PORTD1);
 239:libRobot.cpp  **** 	if(numPort == 2)
 240:libRobot.cpp  **** 	  return _BV(PORTD2);
 241:libRobot.cpp  **** 	if(numPort == 3)
 242:libRobot.cpp  **** 	  return _BV(PORTD3);
 243:libRobot.cpp  **** 	if(numPort == 4)
 244:libRobot.cpp  **** 	  return _BV(PORTD4);
GAS LISTING /tmp/ccb1Z8O1.s 			page 21


 245:libRobot.cpp  **** 	if(numPort == 5)
 246:libRobot.cpp  **** 	  return _BV(PORTD5);
 247:libRobot.cpp  **** 	if(numPort == 6)
 248:libRobot.cpp  **** 	  return _BV(PORTD6);
 249:libRobot.cpp  **** 	if(numPort == 7)
 250:libRobot.cpp  **** 	  return _BV(PORTD7);
 251:libRobot.cpp  ****     }
 252:libRobot.cpp  ****     
 253:libRobot.cpp  ****     return 0;
 601               		.stabn	68,0,253,.LM65-.LFBB8
 602               	.LM65:
 603 011c 20E0      		ldi r18,0
 604 011e 30E0      		ldi r19,0
 605 0120 00C0      		rjmp .L31
 606               	.L30:
 195:libRobot.cpp  ****     else if(port == 1)
 607               		.stabn	68,0,195,.LM66-.LFBB8
 608               	.LM66:
 609 0122 8130      		cpi r24,lo8(1)
 610 0124 01F4      		brne .L32
 611 0126 00C0      		rjmp .L85
 612               	.L65:
 209:libRobot.cpp  **** 	if(numPort == 6)
 613               		.stabn	68,0,209,.LM67-.LFBB8
 614               	.LM67:
 615 0128 6630      		cpi r22,lo8(6)
 616 012a 01F4      		brne .L33
 617 012c 00C0      		rjmp .L57
 618               	.L32:
 214:libRobot.cpp  ****     else if(port == 2)
 619               		.stabn	68,0,214,.LM68-.LFBB8
 620               	.LM68:
 621 012e 8230      		cpi r24,lo8(2)
 622 0130 01F4      		brne .L34
 623 0132 00C0      		rjmp .L85
 624               	.L34:
 233:libRobot.cpp  ****     else if(port == 3)
 625               		.stabn	68,0,233,.LM69-.LFBB8
 626               	.LM69:
 627 0134 8330      		cpi r24,lo8(3)
 628 0136 01F4      		brne .L35
 629               	.L85:
 235:libRobot.cpp  **** 	if(numPort == 0)
 630               		.stabn	68,0,235,.LM70-.LFBB8
 631               	.LM70:
 632 0138 6623      		tst r22
 633 013a 01F0      		breq .L58
 237:libRobot.cpp  **** 	if(numPort == 1)
 634               		.stabn	68,0,237,.LM71-.LFBB8
 635               	.LM71:
 636 013c 6130      		cpi r22,lo8(1)
 637 013e 01F0      		breq .L59
 239:libRobot.cpp  **** 	if(numPort == 2)
 638               		.stabn	68,0,239,.LM72-.LFBB8
 639               	.LM72:
 640 0140 6230      		cpi r22,lo8(2)
 641 0142 01F0      		breq .L60
GAS LISTING /tmp/ccb1Z8O1.s 			page 22


 241:libRobot.cpp  **** 	if(numPort == 3)
 642               		.stabn	68,0,241,.LM73-.LFBB8
 643               	.LM73:
 644 0144 6330      		cpi r22,lo8(3)
 645 0146 01F0      		breq .L61
 243:libRobot.cpp  **** 	if(numPort == 4)
 646               		.stabn	68,0,243,.LM74-.LFBB8
 647               	.LM74:
 648 0148 6430      		cpi r22,lo8(4)
 649 014a 01F0      		breq .L62
 245:libRobot.cpp  **** 	if(numPort == 5)
 650               		.stabn	68,0,245,.LM75-.LFBB8
 651               	.LM75:
 652 014c 6530      		cpi r22,lo8(5)
 653 014e 01F0      		breq .L63
 654 0150 00C0      		rjmp .L65
 655               	.L43:
 193:libRobot.cpp  **** 	  return _BV(PORTA7);
 656               		.stabn	68,0,193,.LM76-.LFBB8
 657               	.LM76:
 658 0152 20E8      		ldi r18,lo8(-128)
 659 0154 30E0      		ldi r19,0
 660 0156 00C0      		rjmp .L31
 661               	.L57:
 191:libRobot.cpp  **** 	  return _BV(PORTA6);
 662               		.stabn	68,0,191,.LM77-.LFBB8
 663               	.LM77:
 664 0158 20E4      		ldi r18,lo8(64)
 665 015a 30E0      		ldi r19,0
 666 015c 00C0      		rjmp .L31
 667               	.L58:
 179:libRobot.cpp  **** 	  return _BV(PORTA0);
 668               		.stabn	68,0,179,.LM78-.LFBB8
 669               	.LM78:
 670 015e 21E0      		ldi r18,lo8(1)
 671 0160 30E0      		ldi r19,0
 672 0162 00C0      		rjmp .L31
 673               	.L59:
 181:libRobot.cpp  **** 	  return _BV(PORTA1);
 674               		.stabn	68,0,181,.LM79-.LFBB8
 675               	.LM79:
 676 0164 22E0      		ldi r18,lo8(2)
 677 0166 30E0      		ldi r19,0
 678 0168 00C0      		rjmp .L31
 679               	.L60:
 183:libRobot.cpp  **** 	  return _BV(PORTA2);
 680               		.stabn	68,0,183,.LM80-.LFBB8
 681               	.LM80:
 682 016a 24E0      		ldi r18,lo8(4)
 683 016c 30E0      		ldi r19,0
 684 016e 00C0      		rjmp .L31
 685               	.L61:
 185:libRobot.cpp  **** 	  return _BV(PORTA3);
 686               		.stabn	68,0,185,.LM81-.LFBB8
 687               	.LM81:
 688 0170 28E0      		ldi r18,lo8(8)
 689 0172 30E0      		ldi r19,0
GAS LISTING /tmp/ccb1Z8O1.s 			page 23


 690 0174 00C0      		rjmp .L31
 691               	.L62:
 187:libRobot.cpp  **** 	  return _BV(PORTA4);
 692               		.stabn	68,0,187,.LM82-.LFBB8
 693               	.LM82:
 694 0176 20E1      		ldi r18,lo8(16)
 695 0178 30E0      		ldi r19,0
 696 017a 00C0      		rjmp .L31
 697               	.L63:
 189:libRobot.cpp  **** 	  return _BV(PORTA5);
 698               		.stabn	68,0,189,.LM83-.LFBB8
 699               	.LM83:
 700 017c 20E2      		ldi r18,lo8(32)
 701 017e 30E0      		ldi r19,0
 702               	.L31:
 254:libRobot.cpp  **** }
 703               		.stabn	68,0,254,.LM84-.LFBB8
 704               	.LM84:
 705 0180 C901      		movw r24,r18
 706 0182 0895      		ret
 707               		.size	_ZN8LibRobot7getPortEhh, .-_ZN8LibRobot7getPortEhh
 708               	.Lscope8:
 709               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 710               		.stabd	78,0,0
 711               		.stabs	"_ZN8LibRobot8testRoueEjjh:F(0,4)",36,0,256,_ZN8LibRobot8testRoueEjjh
 712               		.stabs	"a:P(0,31)",64,0,256,24
 713               		.stabs	"b:P(0,31)",64,0,256,22
 714               		.stabs	"port:P(0,29)",64,0,256,20
 715               	.global	_ZN8LibRobot8testRoueEjjh
 716               		.type	_ZN8LibRobot8testRoueEjjh, @function
 717               	_ZN8LibRobot8testRoueEjjh:
 718               		.stabd	46,0,0
 255:libRobot.cpp  **** 
 256:libRobot.cpp  **** void LibRobot::testRoue(uint16_t a, uint16_t b, uint8_t port)
 257:libRobot.cpp  **** {
 719               		.stabn	68,0,257,.LM85-.LFBB9
 720               	.LM85:
 721               	.LFBB9:
 722               	/* prologue: function */
 723               	/* frame size = 0 */
 724               	/* stack size = 0 */
 725               	.L__stack_usage = 0
 726               	.LBB85:
 727               	.LBB86:
 728               	.LBB87:
 126:libRobot.cpp  **** 	PORTB = valeur;
 729               		.stabn	68,0,126,.LM86-.LFBB9
 730               	.LM86:
 731 0184 22E0      		ldi r18,lo8(2)
 732 0186 25B9      		out 0x5,r18
 733               	.LBE87:
 734               	.LBE86:
 735               	.LBB88:
 736               	.LBB89:
 737               	.LBB90:
 130:libRobot.cpp  **** 	PORTC = valeur;
 738               		.stabn	68,0,130,.LM87-.LFBB9
GAS LISTING /tmp/ccb1Z8O1.s 			page 24


 739               	.LM87:
 740 0188 18B8      		out 0x8,__zero_reg__
 741               	.LBE90:
 742               	.LBE89:
 743               	.LBE88:
 744               	.LBB91:
 745               	.LBB92:
 746               	.LBB93:
 747               	.LBB94:
 748 018a 41E0      		ldi r20,lo8(1)
 749 018c 48B9      		out 0x8,r20
 750               	.LBE94:
 751               	.LBE93:
 752               	.LBE92:
 258:libRobot.cpp  ****     //ex b = 16667, a = 16667 >> 1 --> un pwm 50% de 1/60 seconde de duree
 259:libRobot.cpp  ****  
 260:libRobot.cpp  ****     affectePort(1,getPort(1,1));
 261:libRobot.cpp  ****     
 262:libRobot.cpp  ****     uint16_t attenteEteint = b - a;
 263:libRobot.cpp  **** 
 264:libRobot.cpp  ****     //PORTC = 0x0;
 265:libRobot.cpp  ****     affectePort(2,0x0);
 266:libRobot.cpp  ****     for(uint8_t i =0; i< 2; i++)
 267:libRobot.cpp  ****     {
 268:libRobot.cpp  **** 	affectePort(2, getPort(2,0));
 269:libRobot.cpp  **** 	//PORTC = _BV(PORTC0);
 270:libRobot.cpp  **** 	_delay_loop_2((a<<1)+1);
 753               		.stabn	68,0,270,.LM88-.LFBB9
 754               	.LM88:
 755 018e 9C01      		movw r18,r24
 756 0190 220F      		lsl r18
 757 0192 331F      		rol r19
 758 0194 2F5F      		subi r18,-1
 759 0196 3F4F      		sbci r19,-1
 760               	.LBB97:
 761               	.LBB98:
 762               		.stabs	"/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext15
 763               	.Ltext15:
 764               		.stabn	68,0,110,.LM89-.LFBB9
 765               	.LM89:
 766 0198 F901      		movw r30,r18
 767               	/* #APP */
 768               	 ;  110 "/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h" 1
 769 019a 3197      		1: sbiw r30,1
 770 019c 01F4      		brne 1b
 771               	 ;  0 "" 2
 772               	/* #NOAPP */
 773               	.LBE98:
 774               	.LBE97:
 775               	.LBB100:
 776               	.LBB101:
 777               	.LBB102:
 778               		.stabs	"libRobot.cpp",132,0,0,.Ltext16
 779               	.Ltext16:
 130:libRobot.cpp  **** 	PORTC = valeur;
 780               		.stabn	68,0,130,.LM90-.LFBB9
 781               	.LM90:
GAS LISTING /tmp/ccb1Z8O1.s 			page 25


 782 019e 18B8      		out 0x8,__zero_reg__
 783               	.LBE102:
 784               	.LBE101:
 785               	.LBE100:
 786               	.LBE91:
 262:libRobot.cpp  ****     uint16_t attenteEteint = b - a;
 787               		.stabn	68,0,262,.LM91-.LFBB9
 788               	.LM91:
 789 01a0 681B      		sub r22,r24
 790 01a2 790B      		sbc r23,r25
 791               	.LBB112:
 271:libRobot.cpp  **** 	
 272:libRobot.cpp  **** 	affectePort(2,0x0);
 273:libRobot.cpp  **** 	//PORTC = 0x0;
 274:libRobot.cpp  **** 	_delay_loop_2((attenteEteint<<1)+1);
 792               		.stabn	68,0,274,.LM92-.LFBB9
 793               	.LM92:
 794 01a4 660F      		lsl r22
 795 01a6 771F      		rol r23
 796 01a8 6F5F      		subi r22,-1
 797 01aa 7F4F      		sbci r23,-1
 798               	.LBB105:
 799               	.LBB106:
 800               		.stabs	"/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext17
 801               	.Ltext17:
 802               		.stabn	68,0,110,.LM93-.LFBB9
 803               	.LM93:
 804 01ac CB01      		movw r24,r22
 805               	/* #APP */
 806               	 ;  110 "/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h" 1
 807 01ae 0197      		1: sbiw r24,1
 808 01b0 01F4      		brne 1b
 809               	 ;  0 "" 2
 810               	/* #NOAPP */
 811               	.LBE106:
 812               	.LBE105:
 813               	.LBB108:
 814               	.LBB96:
 815               	.LBB95:
 816               		.stabs	"libRobot.cpp",132,0,0,.Ltext18
 817               	.Ltext18:
 130:libRobot.cpp  **** 	PORTC = valeur;
 818               		.stabn	68,0,130,.LM94-.LFBB9
 819               	.LM94:
 820 01b2 48B9      		out 0x8,r20
 821               	.LBE95:
 822               	.LBE96:
 823               	.LBE108:
 824               	.LBB109:
 825               	.LBB99:
 826               		.stabs	"/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext19
 827               	.Ltext19:
 828               		.stabn	68,0,110,.LM95-.LFBB9
 829               	.LM95:
 830 01b4 C901      		movw r24,r18
 831               	/* #APP */
 832               	 ;  110 "/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h" 1
GAS LISTING /tmp/ccb1Z8O1.s 			page 26


 833 01b6 0197      		1: sbiw r24,1
 834 01b8 01F4      		brne 1b
 835               	 ;  0 "" 2
 836               	/* #NOAPP */
 837               	.LBE99:
 838               	.LBE109:
 839               	.LBB110:
 840               	.LBB104:
 841               	.LBB103:
 842               		.stabs	"libRobot.cpp",132,0,0,.Ltext20
 843               	.Ltext20:
 130:libRobot.cpp  **** 	PORTC = valeur;
 844               		.stabn	68,0,130,.LM96-.LFBB9
 845               	.LM96:
 846 01ba 18B8      		out 0x8,__zero_reg__
 847               	.LBE103:
 848               	.LBE104:
 849               	.LBE110:
 850               	.LBB111:
 851               	.LBB107:
 852               		.stabs	"/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h",132,0,0,.Ltext21
 853               	.Ltext21:
 854               		.stabn	68,0,110,.LM97-.LFBB9
 855               	.LM97:
 856 01bc CB01      		movw r24,r22
 857               	/* #APP */
 858               	 ;  110 "/usr/lib/gcc/avr/4.7.3/../../../../avr/include/util/delay_basic.h" 1
 859 01be 0197      		1: sbiw r24,1
 860 01c0 01F4      		brne 1b
 861               	 ;  0 "" 2
 862               	/* #NOAPP */
 863               	.LBE107:
 864               	.LBE111:
 865               	.LBE112:
 866               	.LBB113:
 867               	.LBB114:
 868               	.LBB115:
 869               		.stabs	"libRobot.cpp",132,0,0,.Ltext22
 870               	.Ltext22:
 130:libRobot.cpp  **** 	PORTC = valeur;
 871               		.stabn	68,0,130,.LM98-.LFBB9
 872               	.LM98:
 873 01c2 18B8      		out 0x8,__zero_reg__
 874 01c4 0895      		ret
 875               	.LBE115:
 876               	.LBE114:
 877               	.LBE113:
 878               	.LBE85:
 879               		.size	_ZN8LibRobot8testRoueEjjh, .-_ZN8LibRobot8testRoueEjjh
 880               	.Lscope9:
 881               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 882               		.stabd	78,0,0
 883               		.stabs	"",100,0,0,.Letext0
 884               	.Letext0:
 885               		.ident	"GCC: (Fedora 4.7.3-0.1.fc19) 4.7.3 20130216 (prerelease)"
GAS LISTING /tmp/ccb1Z8O1.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 libRobot.cpp
     /tmp/ccb1Z8O1.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccb1Z8O1.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccb1Z8O1.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccb1Z8O1.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccb1Z8O1.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccb1Z8O1.s:79     .text:0000000000000000 _ZN8LibRobotC2Ev
     /tmp/ccb1Z8O1.s:79     .text:0000000000000000 _ZN8LibRobotC1Ev
     /tmp/ccb1Z8O1.s:99     .text:0000000000000002 _ZN8LibRobotD2Ev
     /tmp/ccb1Z8O1.s:99     .text:0000000000000002 _ZN8LibRobotD1Ev
     /tmp/ccb1Z8O1.s:118    .text:0000000000000004 _ZN8LibRobot16BoutonEstEnfonceEv
     /tmp/ccb1Z8O1.s:169    .text:0000000000000022 _ZN8LibRobot11attenuerDELEb
     /tmp/ccb1Z8O1.s:287    .text:0000000000000062 _ZN8LibRobot17tournerRoueDroiteEjjibh
     /tmp/ccb1Z8O1.s:462    .text:00000000000000c2 _ZN8LibRobot11affectePortEhj
     /tmp/ccb1Z8O1.s:519    .text:00000000000000e2 _ZN8LibRobot10ajoutePortEhj
     /tmp/ccb1Z8O1.s:581    .text:0000000000000112 _ZN8LibRobot7getPortEhh
     /tmp/ccb1Z8O1.s:717    .text:0000000000000184 _ZN8LibRobot8testRoueEjjh

NO UNDEFINED SYMBOLS
