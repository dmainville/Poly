

#ifndef LIB_ROBOT_H
#define LIB_ROBOT_H


class LibRobot
{
	public:

	//Constructeur, destructeur
	LibRobot();
	~LibRobot();

	//Commandes robot
	static void debut(); //dbt
	static void attendre(uint16_t duree25); //att (25 milliseconde * duree25)
	static void allumerDEL(); //dal
	static void eteindreDEL(); //det
	static void jouerSon(uint8_t son); //sgo (voir tableau 3 tp 9)
	static void arreterSon(); //sar
	static void arreterMoteurs(); //mar
	static void avancer(uint8_t frequence255); //mav (opÃ©rande / 255 * 100%) --> vitesse max = 100% = 255
	static void reculer(uint8_t frequence255); //mre
	static void tournerDroite90(); //trd
	static void tournerGauche90(); //trg
	static void debutBoucle(uint16_t nbRepetition); //dbc (0 = aucune repetition --> une seule execution)
	static void finDeBoucle(); //fbc
	static void fin(); //fin

	//Utils
	static uint8_t BoutonEstEnfonce();
	static void affectePort(uint8_t port, uint16_t valeur);
	static void ajoutePort(uint8_t port, uint16_t valeur);
	static uint16_t getPort(uint8_t port, uint8_t numPort);

	static void tournerRoue(uint16_t a, uint16_t b,bool sens, uint8_t port);
	static void attenuerDEL(bool rouge);

	//Tests
	static void testRoue(uint16_t a, uint16_t b, uint8_t port);

};

#endif /* LIB_ROBOT_H */
